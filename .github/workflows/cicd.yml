name: test
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: make poetry-download

    - name: Set up cache
      uses: actions/cache@v2.1.6
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run style checks
      run: |
        make check-codestyle

    - name: Run tests
      run: |
        make test

    - name: Build wheel and report
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      run: |
        make build
        make package-report

    - name: Build binary
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        make package-pyinstaller

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        fail_on_unmatched_files: true
        generate_release_notes: true
        files: |
          airflow_report.pyz
          telescope-*-py3-none-any.whl
          telescope-*
