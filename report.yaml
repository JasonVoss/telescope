local:
  python: python --version
  helm: helm version --short
  kubectl: kubectl version --client=true --short
  docker: docker version --format json
  astro: astro version
  docker-compose: docker-compose --version
  os: uname -a

local_cloud:
  aws: aws --version
  gcp: gcloud version --format=json
  az: az version

kubernetes:
  cluster_size:
    cmd: kubectl get nodes -o json
    jmespath: items[].status.capacity

  provider:
    cmd: kubectl version -o json
    jmespath: serverVersion.gitVersion
    tranformer: transformers.cloud_provider

  version:
    cmd: kubectl version -o json
    jmespath: serverVersion

# for each airflow:
# - get success/fails of operators
# - get connections
# - get configurations (beyond defaults)
# https://docs.google.com/document/d/1yYTxkhfpRRrhcgjUN8YP3pYKNLDGmnYazAGNgZuhrNI/edit
airflow:
#  config: airflow config list  # TODO: note - sensitive, should just get single params
#  dags: airflow dags report -o json
#  info: airflow info -o json --anonymize
#
#  db:
#    task_instances: select distinct operator from task_instance;
##    dags_info: select dag_id, fileloc, schedule_interval, concurrency from DAG limit 10;
  report: curl

preinstall:
#  database: rf"""kubectl run psql --rm -it --restart=Never -n {namespace} --image {image} --command -- psql {conn.out} -qtc "select 'healthy';" """
#  certificate: ""

postinstall:
  helm: helm ls -aA -o json
  astro_config: cat config.yaml
